// FILE GENERATED WITH SCRIPT
/** @type {import('../../../shared/types.d.ts)} */
export default {
	name: 'airbnb:config',
	rules: {
		'accessor-pairs': 'off',
		'array-callback-return': ['error', { allowImplicit: true }],
		'arrow-body-style': [
			'error',
			'as-needed',
			{ requireReturnForObjectLiteral: false },
		],
		'block-scoped-var': 'error',
		'callback-return': 0,
		camelcase: ['error', { properties: 'never', ignoreDestructuring: false }],
		'capitalized-comments': [
			'off',
			'never',
			{
				line: {
					ignorePattern: '.*',
					ignoreInlineComments: true,
					ignoreConsecutiveComments: true,
				},
				block: {
					ignorePattern: '.*',
					ignoreInlineComments: true,
					ignoreConsecutiveComments: true,
				},
			},
		],
		'class-methods-use-this': ['error', { exceptMethods: [] }],
		complexity: ['off', 20],
		'consistent-return': 'error',
		'consistent-this': 'off',
		'constructor-super': 'error',
		curly: ['error', 'multi-line'],
		'default-case': ['error', { commentPattern: '^no default$' }],
		'default-case-last': 'error',
		'default-param-last': 'error',
		'dot-notation': ['error', { allowKeywords: true }],
		eqeqeq: ['error', 'always', { null: 'ignore' }],
		'for-direction': 'error',
		'func-name-matching': [
			'off',
			'always',
			{ includeCommonJSModuleExports: false, considerPropertyDescriptor: true },
		],
		'func-names': 'warn',
		'func-style': ['off', 'expression'],
		'getter-return': ['error', { allowImplicit: true }],
		'global-require': 0,
		'grouped-accessor-pairs': 'error',
		'guard-for-in': 'error',
		'handle-callback-err': 0,
		'id-denylist': 'off',
		'id-length': 'off',
		'id-match': 'off',
		'import/imports-first': 0,
		'init-declarations': 'off',
		'line-comment-position': [
			'off',
			{ position: 'above', ignorePattern: '', applyDefaultPatterns: true },
		],
		'lines-around-directive': 0,
		'max-classes-per-file': ['error', 1],
		'max-depth': ['off', 4],
		'max-lines': [
			'off',
			{ max: 300, skipBlankLines: true, skipComments: true },
		],
		'max-lines-per-function': [
			'off',
			{ max: 50, skipBlankLines: true, skipComments: true, IIFEs: true },
		],
		'max-nested-callbacks': 'off',
		'max-params': ['off', 3],
		'max-statements': ['off', 10],
		'multiline-comment-style': ['off', 'starred-block'],
		'new-cap': [
			'error',
			{
				newIsCap: true,
				newIsCapExceptions: [],
				capIsNew: false,
				capIsNewExceptions: [
					'Immutable.Map',
					'Immutable.Set',
					'Immutable.List',
				],
			},
		],
		'newline-after-var': 0,
		'newline-before-return': 0,
		'no-alert': 'warn',
		'no-array-constructor': 'error',
		'no-async-promise-executor': 'error',
		'no-await-in-loop': 'error',
		'no-bitwise': 'error',
		'no-buffer-constructor': 0,
		'no-caller': 'error',
		'no-case-declarations': 'error',
		'no-catch-shadow': 0,
		'no-class-assign': 'error',
		'no-compare-neg-zero': 'error',
		'no-cond-assign': ['error', 'always'],
		'no-console': 'warn',
		'no-const-assign': 'error',
		'no-constant-condition': 'warn',
		'no-constructor-return': 'error',
		'no-continue': 'error',
		'no-control-regex': 'error',
		'no-debugger': 'error',
		'no-delete-var': 'error',
		'no-div-regex': 'off',
		'no-dupe-args': 'error',
		'no-dupe-class-members': 'error',
		'no-dupe-else-if': 'error',
		'no-dupe-keys': 'error',
		'no-duplicate-case': 'error',
		'no-duplicate-imports': 'off',
		'no-else-return': ['error', { allowElseIf: false }],
		'no-empty': 'error',
		'no-empty-character-class': 'error',
		'no-empty-function': [
			'error',
			{ allow: ['arrowFunctions', 'functions', 'methods'] },
		],
		'no-empty-pattern': 'error',
		'no-eq-null': 'off',
		'no-eval': 'error',
		'no-ex-assign': 'error',
		'no-extend-native': 'error',
		'no-extra-bind': 'error',
		'no-extra-boolean-cast': 'error',
		'no-extra-label': 'error',
		'no-fallthrough': 'error',
		'no-func-assign': 'error',
		'no-global-assign': ['error', { exceptions: [] }],
		'no-implicit-coercion': [
			'off',
			{ boolean: false, number: true, string: true, allow: [] },
		],
		'no-implicit-globals': 'off',
		'no-implied-eval': 'error',
		'no-import-assign': 'error',
		'no-inline-comments': 'off',
		'no-inner-declarations': 'error',
		'no-invalid-regexp': 'error',
		'no-invalid-this': 'off',
		'no-irregular-whitespace': 'error',
		'no-iterator': 'error',
		'no-label-var': 'error',
		'no-labels': ['error', { allowLoop: false, allowSwitch: false }],
		'no-lone-blocks': 'error',
		'no-lonely-if': 'error',
		'no-loop-func': 'error',
		'no-loss-of-precision': 'error',
		'no-magic-numbers': [
			'off',
			{
				ignore: [],
				ignoreArrayIndexes: true,
				enforceConst: true,
				detectObjects: false,
			},
		],
		'no-misleading-character-class': 'error',
		'no-mixed-requires': 0,
		'no-multi-assign': ['error'],
		'no-multi-str': 'error',
		'no-native-reassign': 0,
		'no-negated-condition': 'off',
		'no-negated-in-lhs': 0,
		'no-nested-ternary': 'error',
		'no-new': 'error',
		'no-new-func': 'error',
		'no-new-object': 0,
		'no-new-require': 0,
		'no-new-symbol': 'error',
		'no-new-wrappers': 'error',
		'no-nonoctal-decimal-escape': 'error',
		'no-obj-calls': 'error',
		'no-octal': 'error',
		'no-octal-escape': 'error',
		'no-param-reassign': [
			'error',
			{
				props: true,
				ignorePropertyModificationsFor: [
					'acc',
					'accumulator',
					'e',
					'ctx',
					'context',
					'req',
					'request',
					'res',
					'response',
					'$scope',
					'staticContext',
				],
			},
		],
		'no-path-concat': 0,
		'no-plusplus': 'error',
		'no-process-env': 0,
		'no-process-exit': 0,
		'no-promise-executor-return': 'error',
		'no-proto': 'error',
		'no-prototype-builtins': 'error',
		'no-redeclare': 'error',
		'no-regex-spaces': 'error',
		'no-restricted-exports': [
			'error',
			{ restrictedNamedExports: ['default', 'then'] },
		],
		'no-restricted-globals': [
			'error',
			{
				name: 'isFinite',
				message:
					'Use Number.isFinite instead https://github.com/airbnb/javascript#standard-library--isfinite',
			},
			{
				name: 'isNaN',
				message:
					'Use Number.isNaN instead https://github.com/airbnb/javascript#standard-library--isnan',
			},
			'addEventListener',
			'blur',
			'close',
			'closed',
			'confirm',
			'defaultStatus',
			'defaultstatus',
			'event',
			'external',
			'find',
			'focus',
			'frameElement',
			'frames',
			'history',
			'innerHeight',
			'innerWidth',
			'length',
			'location',
			'locationbar',
			'menubar',
			'moveBy',
			'moveTo',
			'name',
			'onblur',
			'onerror',
			'onfocus',
			'onload',
			'onresize',
			'onunload',
			'open',
			'opener',
			'opera',
			'outerHeight',
			'outerWidth',
			'pageXOffset',
			'pageYOffset',
			'parent',
			'print',
			'removeEventListener',
			'resizeBy',
			'resizeTo',
			'screen',
			'screenLeft',
			'screenTop',
			'screenX',
			'screenY',
			'scroll',
			'scrollbars',
			'scrollBy',
			'scrollTo',
			'scrollX',
			'scrollY',
			'self',
			'status',
			'statusbar',
			'stop',
			'toolbar',
			'top',
		],
		'no-restricted-imports': ['off', { paths: [], patterns: [] }],
		'no-restricted-modules': 0,
		'no-restricted-properties': [
			'error',
			{
				object: 'arguments',
				property: 'callee',
				message: 'arguments.callee is deprecated',
			},
			{
				object: 'global',
				property: 'isFinite',
				message: 'Please use Number.isFinite instead',
			},
			{
				object: 'self',
				property: 'isFinite',
				message: 'Please use Number.isFinite instead',
			},
			{
				object: 'window',
				property: 'isFinite',
				message: 'Please use Number.isFinite instead',
			},
			{
				object: 'global',
				property: 'isNaN',
				message: 'Please use Number.isNaN instead',
			},
			{
				object: 'self',
				property: 'isNaN',
				message: 'Please use Number.isNaN instead',
			},
			{
				object: 'window',
				property: 'isNaN',
				message: 'Please use Number.isNaN instead',
			},
			{
				property: '__defineGetter__',
				message: 'Please use Object.defineProperty instead.',
			},
			{
				property: '__defineSetter__',
				message: 'Please use Object.defineProperty instead.',
			},
			{
				object: 'Math',
				property: 'pow',
				message: 'Use the exponentiation operator (**) instead.',
			},
		],
		'no-restricted-syntax': [
			'error',
			{
				selector: 'ForInStatement',
				message:
					'for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array.',
			},
			{
				selector: 'ForOfStatement',
				message:
					'iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.',
			},
			{
				selector: 'LabeledStatement',
				message:
					'Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand.',
			},
			{
				selector: 'WithStatement',
				message:
					'`with` is disallowed in strict mode because it makes code impossible to predict and optimize.',
			},
		],
		'no-return-assign': ['error', 'always'],
		'no-return-await': 0,
		'no-script-url': 'error',
		'no-self-assign': ['error', { props: true }],
		'no-self-compare': 'error',
		'no-sequences': 'error',
		'no-setter-return': 'error',
		'no-shadow': 'error',
		'no-shadow-restricted-names': 'error',
		'no-spaced-func': 0,
		'no-sparse-arrays': 'error',
		'no-sync': 0,
		'no-template-curly-in-string': 'error',
		'no-ternary': 'off',
		'no-this-before-super': 'error',
		'no-throw-literal': 'error',
		'no-undef': 'error',
		'no-undef-init': 'error',
		'no-undefined': 'off',
		'no-underscore-dangle': [
			'error',
			{
				allow: [],
				allowAfterThis: false,
				allowAfterSuper: false,
				enforceInMethodNames: true,
			},
		],
		'no-unexpected-multiline': 'error',
		'no-unmodified-loop-condition': 'off',
		'no-unneeded-ternary': ['error', { defaultAssignment: false }],
		'no-unreachable': 'error',
		'no-unreachable-loop': ['error', { ignore: [] }],
		'no-unsafe-finally': 'error',
		'no-unsafe-negation': 'error',
		'no-unsafe-optional-chaining': [
			'error',
			{ disallowArithmeticOperators: true },
		],
		'no-unused-expressions': [
			'error',
			{
				allowShortCircuit: false,
				allowTernary: false,
				allowTaggedTemplates: false,
			},
		],
		'no-unused-labels': 'error',
		'no-unused-private-class-members': 'off',
		'no-unused-vars': [
			'error',
			{ vars: 'all', args: 'after-used', ignoreRestSiblings: true },
		],
		'no-use-before-define': [
			'error',
			{ functions: true, classes: true, variables: true },
		],
		'no-useless-backreference': 'error',
		'no-useless-call': 'off',
		'no-useless-catch': 'error',
		'no-useless-computed-key': 'error',
		'no-useless-concat': 'error',
		'no-useless-constructor': 'error',
		'no-useless-escape': 'error',
		'no-useless-rename': [
			'error',
			{ ignoreDestructuring: false, ignoreImport: false, ignoreExport: false },
		],
		'no-useless-return': 'error',
		'no-var': 'error',
		'no-void': 'error',
		'no-warning-comments': [
			'off',
			{ terms: ['todo', 'fixme', 'xxx'], location: 'start' },
		],
		'no-with': 'error',
		'object-shorthand': [
			'error',
			'always',
			{ ignoreConstructors: false, avoidQuotes: true },
		],
		'one-var': ['error', 'never'],
		'operator-assignment': ['error', 'always'],
		'prefer-arrow-callback': [
			'error',
			{ allowNamedFunctions: false, allowUnboundThis: true },
		],
		'prefer-const': [
			'error',
			{ destructuring: 'any', ignoreReadBeforeAssign: true },
		],
		'prefer-destructuring': [
			'error',
			{
				VariableDeclarator: { array: false, object: true },
				AssignmentExpression: { array: true, object: false },
			},
			{ enforceForRenamedProperties: false },
		],
		'prefer-exponentiation-operator': 'error',
		'prefer-named-capture-group': 'off',
		'prefer-numeric-literals': 'error',
		'prefer-object-spread': 'error',
		'prefer-promise-reject-errors': ['error', { allowEmptyReject: true }],
		'prefer-reflect': 0,
		'prefer-regex-literals': ['error', { disallowRedundantWrapping: true }],
		'prefer-rest-params': 'error',
		'prefer-spread': 'error',
		'prefer-template': 'error',
		radix: 'error',
		'require-atomic-updates': 'off',
		'require-await': 'off',
		'require-jsdoc': 0,
		'require-unicode-regexp': 'off',
		'require-yield': 'error',
		'sort-imports': [
			'off',
			{
				ignoreCase: false,
				ignoreDeclarationSort: false,
				ignoreMemberSort: false,
				memberSyntaxSortOrder: ['none', 'all', 'multiple', 'single'],
			},
		],
		'sort-keys': ['off', 'asc', { caseSensitive: false, natural: true }],
		'sort-vars': 'off',
		strict: ['error', 'never'],
		'symbol-description': 'error',
		'unicode-bom': ['error', 'never'],
		'use-isnan': 'error',
		'valid-jsdoc': 0,
		'valid-typeof': ['error', { requireStringLiterals: true }],
		'vars-on-top': 'error',
		yoda: 'error',
	},
};
